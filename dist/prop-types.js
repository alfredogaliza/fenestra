"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.appPropTypes = exports.taskbarPropTypes = exports.windowStatePropTypes = exports.iconPropTypes = exports.windowPropTypes = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var windowPropTypes = _propTypes.default.shape({
  props: _propTypes.default.shape({
    style: _propTypes.default.object
  }),
  template: _propTypes.default.elementType,
  templateProps: _propTypes.default.object
});

exports.windowPropTypes = windowPropTypes;

var iconPropTypes = _propTypes.default.shape({
  icon: _propTypes.default.string,
  title: _propTypes.default.string,
  window: windowPropTypes
});

exports.iconPropTypes = iconPropTypes;

var windowStatePropTypes = _propTypes.default.shape({
  key: _propTypes.default.number,
  props: _propTypes.default.shape({
    style: _propTypes.default.object
  }),
  component: _propTypes.default.elementType,
  content: _propTypes.default.element
});

exports.windowStatePropTypes = windowStatePropTypes;
var taskbarPropTypes = {
  windows: _propTypes.default.arrayOf(windowStatePropTypes),
  activate: _propTypes.default.func
};
exports.taskbarPropTypes = taskbarPropTypes;
var appPropTypes = {
  data: _propTypes.default.shape({
    windows: _propTypes.default.arrayOf(windowPropTypes),
    icons: _propTypes.default.arrayOf(iconPropTypes),
    store: _propTypes.default.object
  })
};
exports.appPropTypes = appPropTypes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9wcm9wLXR5cGVzLmpzIl0sIm5hbWVzIjpbIndpbmRvd1Byb3BUeXBlcyIsIlByb3BUeXBlcyIsInNoYXBlIiwicHJvcHMiLCJzdHlsZSIsIm9iamVjdCIsInRlbXBsYXRlIiwiZWxlbWVudFR5cGUiLCJ0ZW1wbGF0ZVByb3BzIiwiaWNvblByb3BUeXBlcyIsImljb24iLCJzdHJpbmciLCJ0aXRsZSIsIndpbmRvdyIsIndpbmRvd1N0YXRlUHJvcFR5cGVzIiwia2V5IiwibnVtYmVyIiwiY29tcG9uZW50IiwiY29udGVudCIsImVsZW1lbnQiLCJ0YXNrYmFyUHJvcFR5cGVzIiwid2luZG93cyIsImFycmF5T2YiLCJhY3RpdmF0ZSIsImZ1bmMiLCJhcHBQcm9wVHlwZXMiLCJkYXRhIiwiaWNvbnMiLCJzdG9yZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBSU8sSUFBTUEsZUFBZSxHQUFHQyxtQkFBVUMsS0FBVixDQUFnQjtBQUMzQ0MsRUFBQUEsS0FBSyxFQUFFRixtQkFBVUMsS0FBVixDQUFnQjtBQUNuQkUsSUFBQUEsS0FBSyxFQUFFSCxtQkFBVUk7QUFERSxHQUFoQixDQURvQztBQUkzQ0MsRUFBQUEsUUFBUSxFQUFFTCxtQkFBVU0sV0FKdUI7QUFLM0NDLEVBQUFBLGFBQWEsRUFBRVAsbUJBQVVJO0FBTGtCLENBQWhCLENBQXhCOzs7O0FBUUEsSUFBTUksYUFBYSxHQUFHUixtQkFBVUMsS0FBVixDQUFnQjtBQUN6Q1EsRUFBQUEsSUFBSSxFQUFFVCxtQkFBVVUsTUFEeUI7QUFFekNDLEVBQUFBLEtBQUssRUFBRVgsbUJBQVVVLE1BRndCO0FBR3pDRSxFQUFBQSxNQUFNLEVBQUViO0FBSGlDLENBQWhCLENBQXRCOzs7O0FBTUEsSUFBTWMsb0JBQW9CLEdBQUdiLG1CQUFVQyxLQUFWLENBQWdCO0FBQ2hEYSxFQUFBQSxHQUFHLEVBQUVkLG1CQUFVZSxNQURpQztBQUVoRGIsRUFBQUEsS0FBSyxFQUFFRixtQkFBVUMsS0FBVixDQUFnQjtBQUNuQkUsSUFBQUEsS0FBSyxFQUFFSCxtQkFBVUk7QUFERSxHQUFoQixDQUZ5QztBQUtoRFksRUFBQUEsU0FBUyxFQUFFaEIsbUJBQVVNLFdBTDJCO0FBTWhEVyxFQUFBQSxPQUFPLEVBQUVqQixtQkFBVWtCO0FBTjZCLENBQWhCLENBQTdCOzs7QUFTQSxJQUFNQyxnQkFBZ0IsR0FBRztBQUM1QkMsRUFBQUEsT0FBTyxFQUFFcEIsbUJBQVVxQixPQUFWLENBQWtCUixvQkFBbEIsQ0FEbUI7QUFFNUJTLEVBQUFBLFFBQVEsRUFBRXRCLG1CQUFVdUI7QUFGUSxDQUF6Qjs7QUFLQSxJQUFNQyxZQUFZLEdBQUc7QUFDeEJDLEVBQUFBLElBQUksRUFBRXpCLG1CQUFVQyxLQUFWLENBQWdCO0FBQ2xCbUIsSUFBQUEsT0FBTyxFQUFFcEIsbUJBQVVxQixPQUFWLENBQ0x0QixlQURLLENBRFM7QUFJbEIyQixJQUFBQSxLQUFLLEVBQUUxQixtQkFBVXFCLE9BQVYsQ0FDSGIsYUFERyxDQUpXO0FBT2xCbUIsSUFBQUEsS0FBSyxFQUFFM0IsbUJBQVVJO0FBUEMsR0FBaEI7QUFEa0IsQ0FBckIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5cblxuZXhwb3J0IGNvbnN0IHdpbmRvd1Byb3BUeXBlcyA9IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgcHJvcHM6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgICAgIHN0eWxlOiBQcm9wVHlwZXMub2JqZWN0XG4gICAgfSksXG4gICAgdGVtcGxhdGU6IFByb3BUeXBlcy5lbGVtZW50VHlwZSxcbiAgICB0ZW1wbGF0ZVByb3BzOiBQcm9wVHlwZXMub2JqZWN0XG59KTtcblxuZXhwb3J0IGNvbnN0IGljb25Qcm9wVHlwZXMgPSBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGljb246IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgdGl0bGU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgd2luZG93OiB3aW5kb3dQcm9wVHlwZXMgICBcbn0pO1xuXG5leHBvcnQgY29uc3Qgd2luZG93U3RhdGVQcm9wVHlwZXMgPSBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGtleTogUHJvcFR5cGVzLm51bWJlcixcbiAgICBwcm9wczogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICAgICAgc3R5bGU6IFByb3BUeXBlcy5vYmplY3RcbiAgICB9KSxcbiAgICBjb21wb25lbnQ6IFByb3BUeXBlcy5lbGVtZW50VHlwZSxcbiAgICBjb250ZW50OiBQcm9wVHlwZXMuZWxlbWVudFxufSk7XG5cbmV4cG9ydCBjb25zdCB0YXNrYmFyUHJvcFR5cGVzID0ge1xuICAgIHdpbmRvd3M6IFByb3BUeXBlcy5hcnJheU9mKHdpbmRvd1N0YXRlUHJvcFR5cGVzKSxcbiAgICBhY3RpdmF0ZTogUHJvcFR5cGVzLmZ1bmNcbn07XG5cbmV4cG9ydCBjb25zdCBhcHBQcm9wVHlwZXMgPSB7XG4gICAgZGF0YTogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICAgICAgd2luZG93czogUHJvcFR5cGVzLmFycmF5T2YoXG4gICAgICAgICAgICB3aW5kb3dQcm9wVHlwZXNcbiAgICAgICAgKSxcbiAgICAgICAgaWNvbnM6IFByb3BUeXBlcy5hcnJheU9mKFxuICAgICAgICAgICAgaWNvblByb3BUeXBlc1xuICAgICAgICApLCBcbiAgICAgICAgc3RvcmU6IFByb3BUeXBlcy5vYmplY3QgICAgICAgICAgICAgICAgICAgIFxuICAgIH0pXG59Il19